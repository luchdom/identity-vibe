version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=AuthServer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - identity-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s


  # AuthServer
  authserver:
    build:
      context: .
      dockerfile: src/backend/AuthServer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=AuthServer;Username=postgres;Password=postgres
      # URL Configuration
      - EXTERNAL_AUTH_URL=${EXTERNAL_AUTH_URL:-https://localhost:5000}
      - EXTERNAL_GATEWAY_URL=${EXTERNAL_GATEWAY_URL:-http://localhost:5002}
      - EXTERNAL_CLIENT_URL=${EXTERNAL_CLIENT_URL:-http://localhost:5173}
      - INTERNAL_AUTH_URL=http://authserver:8080
      - INTERNAL_GATEWAY_URL=http://gateway:8080
      - INTERNAL_ORDERS_URL=http://orders:8080
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=authserver
      - OTEL_SERVICE_VERSION=1.0.0
      # Configure OTLP endpoint for your APM solution:
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14317        # For Jaeger
      # - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io   # For Honeycomb
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317      # For local OTEL collector
      - OTEL_RESOURCE_ATTRIBUTES=service.name=authserver,service.version=1.0.0,deployment.environment=docker
    ports:
      - "5000:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - identity-network
    volumes:
      - ~/.aspnet/https:/https:ro
    restart: unless-stopped

  # Gateway BFF
  gateway:
    build:
      context: .
      dockerfile: src/backend/Gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      # URL Configuration
      - EXTERNAL_AUTH_URL=${EXTERNAL_AUTH_URL:-https://localhost:5000}
      - EXTERNAL_GATEWAY_URL=${EXTERNAL_GATEWAY_URL:-http://localhost:5002}
      - EXTERNAL_CLIENT_URL=${EXTERNAL_CLIENT_URL:-http://localhost:5173}
      - INTERNAL_AUTH_URL=http://authserver:8080
      - INTERNAL_GATEWAY_URL=http://gateway:8080
      - INTERNAL_ORDERS_URL=http://orders:8080
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=gateway
      - OTEL_SERVICE_VERSION=1.0.0
      # Configure OTLP endpoint for your APM solution:
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14317        # For Jaeger
      # - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io   # For Honeycomb
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317      # For local OTEL collector
      - OTEL_RESOURCE_ATTRIBUTES=service.name=gateway,service.version=1.0.0,deployment.environment=docker
    ports:
      - "5002:8080"
    depends_on:
      - authserver
      - orders
    networks:
      - identity-network
    restart: unless-stopped

  # Orders Service
  orders:
    build:
      context: .
      dockerfile: src/backend/Orders/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
      # URL Configuration
      - EXTERNAL_AUTH_URL=${EXTERNAL_AUTH_URL:-https://localhost:5000}
      - EXTERNAL_GATEWAY_URL=${EXTERNAL_GATEWAY_URL:-http://localhost:5002}
      - EXTERNAL_CLIENT_URL=${EXTERNAL_CLIENT_URL:-http://localhost:5173}
      - INTERNAL_AUTH_URL=http://authserver:8080
      - INTERNAL_GATEWAY_URL=http://gateway:8080
      - INTERNAL_ORDERS_URL=http://orders:8080
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=orders
      - OTEL_SERVICE_VERSION=1.0.0
      # Configure OTLP endpoint for your APM solution:
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14317        # For Jaeger
      # - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io   # For Honeycomb
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317      # For local OTEL collector
      - OTEL_RESOURCE_ATTRIBUTES=service.name=orders,service.version=1.0.0,deployment.environment=docker
    ports:
      - "5003:8080"
    depends_on:
      - authserver
    networks:
      - identity-network
    restart: unless-stopped

  # React Client
  client:
    build:
      context: ./src/client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - gateway
    networks:
      - identity-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  identity-network:
    driver: bridge 