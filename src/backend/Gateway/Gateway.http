@Gateway_HostAddress = http://localhost:5002

# ===========================================
# Gateway BFF Authentication Endpoints
# ===========================================

### Login via Gateway BFF
POST {{Gateway_HostAddress}}/auth/login
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "Admin123!"
}

### Refresh Token via Gateway BFF
POST {{Gateway_HostAddress}}/auth/refresh
Content-Type: application/json

{
  "refreshToken": "YOUR_REFRESH_TOKEN_HERE"
}

### Get Current User Info (Requires Authentication)
GET {{Gateway_HostAddress}}/auth/user
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

### Logout via Gateway BFF
POST {{Gateway_HostAddress}}/auth/logout
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

# ===========================================
# Gateway YARP Proxied Endpoints
# ===========================================

### Health Check
GET {{Gateway_HostAddress}}/health

# AuthServer endpoints proxied through direct paths
### Get Clients via Gateway (proxied to AuthServer)
GET {{Gateway_HostAddress}}/scope/clients

### Register User via Gateway (proxied to AuthServer)
POST {{Gateway_HostAddress}}/account/register
Content-Type: application/json

{
  "email": "newuser@example.com",
  "password": "NewUser123!",
  "confirmPassword": "NewUser123!",
  "firstName": "John",
  "lastName": "Doe"
}

### Get User Profile via Gateway (proxied to AuthServer)
GET {{Gateway_HostAddress}}/account/profile
Authorization: Bearer YOUR_ACCESS_TOKEN_HERE

# Orders Service endpoints proxied through /orders/* path
### Get Orders via Gateway (proxied to Orders Service - requires orders.read scope)
GET {{Gateway_HostAddress}}/orders
Authorization: Bearer YOUR_USER_ACCESS_TOKEN_HERE

### Create Order via Gateway (proxied to Orders Service - requires orders.write scope)
POST {{Gateway_HostAddress}}/orders
Authorization: Bearer YOUR_USER_ACCESS_TOKEN_HERE
Content-Type: application/json
Idempotency-Key: order-{{$randomUuid}}

{
  "customerFirstName": "John",
  "customerLastName": "Doe",
  "customerEmail": "john.doe@example.com",
  "customerPhone": "+1-555-0123",
  "shippingAddress": "123 Main St",
  "shippingCity": "New York",
  "shippingState": "NY",
  "shippingPostalCode": "10001",
  "shippingCountry": "USA",
  "specialInstructions": "Leave at door",
  "orderItems": [
    {
      "productSku": "LAPTOP-001",
      "productName": "Gaming Laptop Pro",
      "productDescription": "High-performance gaming laptop",
      "productCategory": "Electronics",
      "quantity": 1,
      "unitPrice": 1299.99
    }
  ]
}

### Get Order by ID via Gateway (proxied to Orders Service - requires orders.read scope)
GET {{Gateway_HostAddress}}/orders/1
Authorization: Bearer YOUR_USER_ACCESS_TOKEN_HERE

### Update Order via Gateway (proxied to Orders Service - requires orders.write scope)
PUT {{Gateway_HostAddress}}/orders/1
Authorization: Bearer YOUR_USER_ACCESS_TOKEN_HERE
Content-Type: application/json
Idempotency-Key: update-{{$randomUuid}}

{
  "specialInstructions": "Updated instructions - Call before delivery"
}

### Cancel Order via Gateway (proxied to Orders Service - requires orders.write scope)
POST {{Gateway_HostAddress}}/orders/1/cancel
Authorization: Bearer YOUR_USER_ACCESS_TOKEN_HERE
Content-Type: application/json
Idempotency-Key: cancel-{{$randomUuid}}

{
  "reason": "Customer requested cancellation"
}

# ===========================================
# Complete BFF Workflow Example
# ===========================================

### Step 1: Login to get tokens
# POST {{Gateway_HostAddress}}/auth/login
# Content-Type: application/json
# 
# {
#   "email": "admin@example.com",
#   "password": "Admin123!"
# }

### Step 2: Use the access_token from login response in subsequent requests
# GET {{Gateway_HostAddress}}/auth/user
# Authorization: Bearer {access_token_from_step_1}

### Step 3: Access protected resources through Gateway
# GET {{Gateway_HostAddress}}/orders
# Authorization: Bearer {access_token_from_step_1}

# ===========================================
# Variables for Testing
# ===========================================
# Replace these with actual tokens:
# @access_token = YOUR_ACCESS_TOKEN_HERE
# @refresh_token = YOUR_REFRESH_TOKEN_HERE
# @service_token = YOUR_SERVICE_ACCESS_TOKEN_HERE
# @user_token = YOUR_USER_ACCESS_TOKEN_HERE

###